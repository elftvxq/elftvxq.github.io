[{"title":"🌐 Internet & Networking Terminology 網路名詞小筆記","url":"/2025/05/11/Internet&Networking-Terminology/","content":"🔁 TCP（Transmission Control Protocol，傳輸控制協定）TCP 是一種可靠的資料傳輸協定，它的主要任務是確保資料能正確、完整地送到對方手中。\n✋ 三次握手（Three-way Handshake）TCP 傳輸會在連線前經過「三次握手」來建立穩定的連線。。這三步驟像是在雙方說：「我準備好了嗎？你也好了嗎？好，那我們開始吧。」\n過程簡化如下：\nClient：嗨，我要傳資料囉！（SYN）\nServer：我準備好了，你準備好了嗎？（SYN-ACK）\nClient：我真的準備好了！（ACK）\n三次握手完成後，雙方才會開始傳送資料。\n✅ 適用場景：瀏覽網頁\n檔案下載\n資料庫連線\n只要是 需要資料完整、不容出錯的場合，都會用 TCP。\n三次握手完成後，資料才會開始傳輸。\n✅ 適用場景：\n\n瀏覽網頁\n檔案下載\n資料庫連線\n\n🔍 進階補充（TCP）\n屬於 OSI 模型第 4 層：傳輸層\n為 面向連線（connection-oriented）協定\n提供封包編號、回應確認、重傳與流量控制\n包含擁塞控制、流量控制、檢查碼驗證等機制\n常見欄位：Sequence Number、ACK Number、SYN、ACK、FIN\n\n\n📡 UDP（User Datagram Protocol，用戶資料報協定）UDP 是一種「輕量、快速、但不保證完整性」的協定，就像把明信片丟進郵筒，不確認是否有收到。\n✅ 適用場景：\n\n🎥 看直播\n🎮 玩線上遊戲\n📡 VoIP 語音通訊\n\n🔍 進階補充（UDP）\n同樣是 OSI 第 4 層傳輸層協定\n無連線（connectionless），不握手\n不保證順序、不重傳、不確認\n適合即時性高的應用\n\n哪些場景為什麼用 UDP 而不是 TCP？因為有些情境中，速度比精確更重要，例如：\n看直播（掉一兩個 frame 沒關係）玩線上遊戲（比起補齊資料，更在乎即時回應）\n\n📣 ICMP（Internet Control Message Protocol）ICMP 用於傳送網路錯誤訊息與診斷，例如 ping、traceroute 就是透過 ICMP 運作。透過 terminal 輸入\nping google.com\n其實背後就是透過 ICMP 傳送「我可以連到你嗎？」的訊息，然後對方回應。\n🔍 進階補充（ICMP）\n屬於 OSI 第 3 層（網路層）\n常見用途：\nping: 發送 Echo Request → 回 Echo Reply\ntraceroute: TTL 遞減觸發 Time Exceeded\n\n\n用於傳送網路控制訊息，而非應用資料\n\n\n🌍 DNS（Domain Name System）DNS 是網際網路的電話簿，負責將網域名稱（如 google.com）轉換成 IP 位址，但機器只認得 IP 位址（如 142.250.72.14）。當你輸入網址時，DNS 就會幫你查出對應的 IP，像是在說：「喔，google.com 對應的地址是這個。」\n🔍 進階補充（DNS）\nOSI 應用層協定，使用 Port 53\n查詢類型：\n遞迴查詢（由 Resolver 幫忙找到最終結果）\n迭代查詢（DNS Server 分層協助）\n\n\n常見記錄類型：\nA, AAAA, CNAME, MX, NS…\n\n\n有 TTL 快取機制\n\n\n🗂️ Nameserver（名稱伺服器）Nameserver 是負責 回應 DNS 查詢請求 的伺服器。每個網域註冊後都需要指定 Nameserver，告訴全世界：\n「如果有人想找我的 IP，請問這台伺服器！」\n例如：\n\ngoogle.com 的 nameserver 負責回答「google.com 是哪個 IP？」\n\n有時候改變網站的主機時，也要修改對應的 nameserver 設定讓用戶知道去哪裡解析該網域。\n\n\n🔍 進階補充（Nameserver）\n屬於 DNS 架構中的「授權名稱伺服器」\n管理特定網域的解析記錄\n網域設定時需指定其 Nameserver（可指向 Cloudflare 等）\n\n\n🔗 URL（Uniform Resource Locator，統一資源定位符）URL 是網路世界的地址，告訴瀏覽器該去哪裡、取什麼資源、怎麼存取。\n📌 結構範例\nhttps://www.example.com:443/path/to/page?query=value#section1\n\n🔍 進階補充（URL 結構）\n\n\n區塊\n名稱\n說明\n\n\n\nhttps\n協定\nhttp &#x2F; https &#x2F; ftp…\n\n\nwww.example.com\n主機名稱\nDNS 會解析成 IP 位址\n\n\n:443\n埠號\n預設 http:80 &#x2F; https:443\n\n\n/path/...\n路徑\n網頁或資源位置\n\n\n?query=value\n查詢參數\n用來傳資料（GET 請求）\n\n\n#section1\n錨點\n網頁內部跳轉\n\n\n🎯 範例解析\nhttps://www.youtube.com/watch?v=dQw4w9WgXcQ\n\n\n協定：HTTPS\n主機：YouTube\n路徑：&#x2F;watch\n查詢參數：v &#x3D; dQw4w9WgXcQ（影片 ID）\n\n\n🧠 總結表格\n\n\n名詞\n作用\n特性\n\n\n\nTCP\n傳送穩定資料\n有連線、可靠、三次握手、重傳、擁塞控制\n\n\nUDP\n快速傳輸資料\n無連線、不保證資料到達、適合即時應用\n\n\nICMP\n診斷與錯誤通訊\n用於 ping、錯誤回報、屬於網路層\n\n\nDNS\n將網址轉成 IP\n網路的電話簿、支援快取、多種記錄類型\n\n\nNameserver\n回答 DNS 查詢\n管理授權網域、與 DNS 配合\n\n\nURL\n指定網路資源位置\n協定、主機、路徑、參數、錨點等結構資訊\n\n\n\n📌 本文為網路入門筆記，若你有興趣更深入認識 TCP&#x2F;IP、DNS 原理或 OSI 模型，歡迎留言或期待下一篇延伸文 🔧\n","categories":["networking"],"tags":["網路","前端基礎","TCP/IP","DNS"]}]